defmodule {{MODULE}}Web.SubscriptionLive.Manage do
  use {{MODULE}}Web, :live_view
  alias {{MODULE}}.Payments

  @impl true
  def mount(_params, _session, socket) do
    user = socket.assigns.current_scope.user
    subscription = Payments.get_active_subscription(user)
    usage_stats = Payments.get_usage_stats(user)

    socket =
      socket
      |> assign(:page_title, "Manage Subscription")
      |> assign(:subscription, subscription)
      |> assign(:usage_stats, usage_stats)
      |> assign(:show_cancel_modal, false)

    {:ok, socket}
  end

  @impl true
  def handle_event("show_cancel_modal", _params, socket) do
    {:noreply, assign(socket, :show_cancel_modal, true)}
  end

  @impl true
  def handle_event("hide_cancel_modal", _params, socket) do
    {:noreply, assign(socket, :show_cancel_modal, false)}
  end

  @impl true
  def handle_event("confirm_cancel", _params, socket) do
    user = socket.assigns.current_scope.user

    case Payments.cancel_subscription(user) do
      {:ok, subscription} ->
        socket =
          socket
          |> put_flash(
            :info,
            "Your subscription has been cancelled successfully."
          )
          |> assign(:show_cancel_modal, false)
          |> assign(:subscription, subscription)

        {:noreply, socket}

      {:error, _reason} ->
        socket =
          socket
          |> put_flash(
            :error,
            "Failed to cancel subscription. Please try again or contact support."
          )
          |> assign(:show_cancel_modal, false)

        {:noreply, socket}
    end
  end

  @impl true
  def render(assigns) do
    ~H"""
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
      <h1 class="text-3xl font-bold text-gray-900 dark:text-white mb-8">
        Manage Subscription
      </h1>

      <div :if={@subscription} class="bg-white dark:bg-gray-800 rounded-lg shadow p-6 mb-6">
        <h2 class="text-xl font-semibold mb-4 dark:text-white">Current Plan</h2>

        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
          <div>
            <p class="text-sm text-gray-600 dark:text-gray-400">Plan</p>
            <p class="text-lg font-medium dark:text-white">
              {format_plan_name(@subscription.plan_id)}
            </p>
          </div>

          <div>
            <p class="text-sm text-gray-600 dark:text-gray-400">Status</p>
            <p class="text-lg font-medium">
              <span class={[
                "inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium",
                status_badge_class(@subscription.status)
              ]}>
                {format_status(@subscription.status)}
              </span>
            </p>
          </div>

          <div :if={@subscription.started_at}>
            <p class="text-sm text-gray-600 dark:text-gray-400">Member Since</p>
            <p class="text-lg font-medium dark:text-white">
              {format_date(@subscription.started_at)}
            </p>
          </div>

          <div :if={@subscription.next_billing_at && @subscription.status != "CANCELED"}>
            <p class="text-sm text-gray-600 dark:text-gray-400">Next Billing Date</p>
            <p class="text-lg font-medium dark:text-white">
              {format_date(@subscription.next_billing_at)}
            </p>
          </div>
        </div>

        <div class="mt-6 flex gap-4">
          <.link
            navigate="/subscription"
            class="inline-flex items-center px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm text-sm font-medium text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600"
          >
            Change Plan
          </.link>

          <button
            :if={@subscription.status in ["ACTIVE", "PENDING"]}
            phx-click="show_cancel_modal"
            class="inline-flex items-center px-4 py-2 border border-red-300 dark:border-red-700 rounded-md shadow-sm text-sm font-medium text-red-700 dark:text-red-400 bg-white dark:bg-gray-800 hover:bg-red-50 dark:hover:bg-red-900"
          >
            Cancel Subscription
          </button>
        </div>
      </div>

      <div :if={!@subscription} class="bg-white dark:bg-gray-800 rounded-lg shadow p-6 text-center">
        <svg
          class="mx-auto h-12 w-12 text-gray-400 dark:text-gray-600 mb-4"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z"
          />
        </svg>
        <h3 class="text-lg font-medium text-gray-900 dark:text-white mb-2">No Active Subscription</h3>
        <p class="text-gray-600 dark:text-gray-400 mb-6">
          Unlock premium features to get the most out of {{MODULE}}.
        </p>
        <.link
          navigate="/subscription"
          class="inline-flex items-center px-6 py-3 border border-transparent text-base font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700"
        >
          View Plans
        </.link>
      </div>
      
    <!-- Cancel Confirmation Modal -->
      <div
        :if={@show_cancel_modal}
        class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50"
      >
        <div class="bg-white dark:bg-gray-800 rounded-lg p-6 max-w-md w-full mx-4">
          <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">
            Cancel Subscription?
          </h3>
          <p class="text-gray-600 dark:text-gray-400 mb-6">
            Are you sure you want to cancel your subscription? You'll lose access to premium features at the end of your current billing period.
          </p>
          <div class="flex gap-4">
            <button
              phx-click="hide_cancel_modal"
              class="flex-1 px-4 py-2 border border-gray-300 dark:border-gray-600 rounded-md text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-700"
            >
              Keep Subscription
            </button>
            <button
              phx-click="confirm_cancel"
              class="flex-1 px-4 py-2 bg-red-600 text-white rounded-md hover:bg-red-700"
            >
              Yes, Cancel
            </button>
          </div>
        </div>
      </div>
    </div>
    """
  end

  defp format_plan_name(:premium_monthly), do: "Premium Monthly"
  defp format_plan_name(:premium_yearly), do: "Premium Yearly"
  defp format_plan_name(:premium_weekly), do: "Premium Weekly"
  defp format_plan_name(:free), do: "Free"
  defp format_plan_name(plan) when is_binary(plan), do: plan
  defp format_plan_name(plan), do: to_string(plan)

  defp format_status("ACTIVE"), do: "Active"
  defp format_status("PENDING"), do: "Pending"
  defp format_status("CANCELED"), do: "Canceled"
  defp format_status("PENDING_CANCELLATION"), do: "Canceling"
  defp format_status(status), do: status

  defp status_badge_class("ACTIVE"),
    do: "bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-300"

  defp status_badge_class("PENDING"),
    do: "bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-300"

  defp status_badge_class("CANCELED"),
    do: "bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-300"

  defp status_badge_class("PENDING_CANCELLATION"),
    do: "bg-orange-100 text-orange-800 dark:bg-orange-900 dark:text-orange-300"

  defp status_badge_class(_), do: "bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-300"

  defp format_date(nil), do: "-"

  defp format_date(date) do
    Calendar.strftime(date, "%B %d, %Y")
  end
end
